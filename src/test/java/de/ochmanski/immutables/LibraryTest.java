/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package de.ochmanski.immutables;

import annotations.UnitTest;
import de.ochmanski.immutables.immutable.ImmutableList;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;

import javax.validation.constraints.NotNull;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.Arrays;

import static org.assertj.core.api.Assertions.assertThat;

@UnitTest
@ExtendWith(MockitoExtension.class)
class LibraryTest {

  @Test
  void someLibraryMethodReturnsTrue() {
    ImmutableList<String> unitUnderTest = ImmutableList.<@NotNull String>of("nothing", String[]::new);
    assertThat(unitUnderTest).isNotNull();
    assertThat(unitUnderTest.isNotEmpty()).isTrue();
  }

  @Test
  void unboxArray() throws UnknownHostException {
//    InetAddress.numericToTextFormat(new byte[]{(byte) 255,1,127, (byte) 128});
    final String ipAddress = "252.253.254.255";
    final int[] array = Arrays.stream(ipAddress.split("\\."))
      .mapToInt(Integer::parseUnsignedInt)
      .toArray();
    final byte[] actual = new byte[array.length];
    int i = 0;
    for (final int b : array) {
      actual[i++] = (byte) b;
    }
    assertThat(actual[0]).isEqualTo((byte) 252).isEqualTo((byte) -4);
    assertThat(actual[1]).isEqualTo((byte) 253).isEqualTo((byte) -3);
    assertThat(actual[2]).isEqualTo((byte) 254).isEqualTo((byte) -2);
    assertThat(actual[3]).isEqualTo((byte) 255).isEqualTo((byte) -1);

    assertThat(InetAddress.getByAddress(actual).getHostAddress()).isEqualTo(ipAddress);
  }

  @Test
  void unboxArray2() throws UnknownHostException {
    final String ipAddress = "0.127.128.255";
    final int[] array = Arrays.stream(ipAddress.split("\\."))
      .mapToInt(Integer::parseUnsignedInt)
      .toArray();
    final byte[] actual = new byte[array.length];
    int i = 0;
    for (final int b : array) {
      actual[i++] = (byte) b;
    }
    assertThat(actual[0]).isEqualTo((byte) 0);
    assertThat(actual[1]).isEqualTo((byte) 127);
    assertThat(actual[2]).isEqualTo((byte) 128);
    assertThat(actual[3]).isEqualTo((byte) 255);

    assertThat(InetAddress.getByAddress(actual).getHostAddress()).isEqualTo(ipAddress);
  }


}
